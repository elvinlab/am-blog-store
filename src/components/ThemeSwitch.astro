---

---
<script>
import domHelpers from '@helpers/domHelpers';

interface CustomDocument extends Document {
  startViewTransition?: (callback: () => void) => void;
}

const customDocument: CustomDocument = document;

type Theme = 'light' | 'dark';

const primaryColorScheme: Theme | '' = ''; // "light" | "dark"

const currentTheme = localStorage.getItem('theme') as Theme | null;

function getPreferTheme(): Theme {
  if (currentTheme) return currentTheme;
  if (primaryColorScheme) return primaryColorScheme as Theme;
  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
}

let themeValue: Theme = getPreferTheme();

function setPreference(): void {
  localStorage.setItem('theme', themeValue);
  reflectPreference();
}

function reflectPreference(): void {
  const switchTheme = () => {
    document.firstElementChild?.setAttribute('data-theme', themeValue);
    domHelpers.$('#theme-btn')?.setAttribute('aria-label', themeValue);
  };

  if (!customDocument.startViewTransition) {
    switchTheme();
  } else {
    customDocument.startViewTransition(switchTheme);
  }
}

reflectPreference();

function init(): void {
  reflectPreference();

  const toggleTheme = () => {
    themeValue = themeValue === 'light' ? 'dark' : 'light';
    setPreference();
  };

  domHelpers.$('#theme-btn')?.addEventListener('click', toggleTheme);
  domHelpers.$('#theme-btn-mobile')?.addEventListener('click', toggleTheme);
}

window.onload = () => {
  init();
};

window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', ({ matches: isDark }) => {
  themeValue = isDark ? 'dark' : 'light';
  setPreference();
});

</script>
<button type="button" id="theme-btn" class="header-btn" title="Toggles light & dark" aria-label="auto" aria-live="polite">
  <i id="moon-icon" class="ri-sun-line vibrate text-2xl"/>
  <i id="sun-icon" class="ri-moon-line vibrate text-2xl"/>
</button>

<style>
/* ----------------------------------------------
  Generated by AnimatiSS
  Licensed under FreeBSD License
  URL: https://xsgames.co/animatiss
  Twitter: @xsgames_
---------------------------------------------- */

.vibrate{animation:vibrate 1.5s linear both} @keyframes vibrate{0%{transform:translate(0)}20%{transform:translate(-2px,2px)}40%{transform:translate(-2px,-2px)}60%{transform:translate(2px,2px)}80%{transform:translate(2px,-2px)}100%{transform:translate(0)}}
</style>
